<!DOCTYPE html>
<html lang="th">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>CP KKU Study Notes</title>
  <link rel="stylesheet" href="/style.css" />
  <style>
    .like-btn.liked {
      color: red;
    }
  </style>
</head>

<body>

  <main class="container">
    <div class="post-show">
      <article class="post">
        <% if (post.coverImage){ %><img src="<%= post.coverImage %>" class="cover-xl" />
          <% } %>
            <h1>
              <%= post.title %>
            </h1>
            <p class="muted">
              ‡πÇ‡∏î‡∏¢ <%= post.author?.username %> ¬∑ 
              ‚ô• <span class="like-count"><%= post.likes.length %></span> 
              ¬∑ üí¨ <span class="comment-count"><%= post.comments.length %></span>
              ¬∑ üëÅÔ∏è <%= post.views %>
            </p>
            <div class="tags">
              <% (post.tags||[]).forEach(t=>{ %><span class="tag">
                  <%= t %>
                </span>
                <% }) %>
            </div>
            <p>
              <%= post.body %>
            </p>
            <div class="row">
              <button 
                type="button" 
                class="like-btn<%= (currentUser && post.likes.map(id => String(id)).includes(String(currentUser.id))) ? ' liked' : '' %>" 
                data-slug="<%= post.slug %>"
              >
                ‚ô• ‡∏ñ‡∏π‡∏Å‡πÉ‡∏à
              </button>
              <% if (currentUser && (String(currentUser.id) === String(post.author._id))) { %>
                <a class="button" href="/posts/<%= post.slug %>/edit">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</a>
                <form method="post" action="/posts/<%= post.slug %>/delete" style="display:inline" onsubmit="return confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ô‡∏µ‡πâ? ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ');">
                  <button class="danger">‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå</button>
                </form>
              <% } else if (currentUser) { %>
                <a class="button" href="/posts/<%= post.slug %>/report">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</a>
              <% } %>
            </div>
            <% if (currentUser) { %>
              <button id="save-post-btn" data-slug="<%= post.slug %>">
                <%= currentUser.savePosts && currentUser.savePosts.includes(String(post._id)) ? '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å'
                  : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏û‡∏™‡∏ï‡πå' %>
              </button>
              <% } %>
                <hr />
                <h3>‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå</h3>
                <form id="comment-form" method="post" action="/posts/<%= post.slug %>/comments">
                  <textarea name="body" rows="3" required id="comment-textarea"></textarea>
                  <button type="submit">‡∏™‡πà‡∏á‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå</button>
                </form>
                <ul class="comments" id="comments-list">
                  <% post.comments.forEach(c=>{ %>
                    <li><b><%= c.author?.username %></b> <span class="muted"><%= new Date(c.createdAt).toLocaleString() %></span><br />
                      <%= c.body %>
                    </li>
                  <% }) %>
                </ul>
                <% if (!currentUser) { %>
                  <p class="muted">‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå</p>
                <% } %>
      </article>
    </div>
  </main>
</body>
<script src="/js/save-post.js"></script>
<script>
document.querySelectorAll('.like-btn').forEach(btn => {
  btn.addEventListener('click', async function(event) {
    event.preventDefault();
    event.stopPropagation();
    const slug = this.dataset.slug;
    const res = await fetch(`/posts/${slug}/like`, { method: 'POST' });
    if (res.ok) {
      const data = await res.json();
      document.querySelector('.like-count').textContent = data.likes;
      if(data.liked) {
        this.classList.add('liked');
      } else {
        this.classList.remove('liked');
      }
    }
  });
});

// AJAX comment submit
const commentForm = document.getElementById('comment-form');
const commentTextarea = document.getElementById('comment-textarea');
const commentsList = document.getElementById('comments-list');
if (commentForm && commentTextarea && commentsList) {
  commentTextarea.addEventListener('keydown', function(e) {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      commentForm.dispatchEvent(new Event('submit', {cancelable:true}));
    }
  });
  commentForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    const body = commentTextarea.value.trim();
    if (!body) return;
    const btn = commentForm.querySelector('button[type=submit]');
    btn.disabled = true;
    try {
      const res = await fetch(commentForm.action, {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({ body })
      });
      if (res.ok) {
        // Add new comment to list (optimistic, or reload from server if you want)
        const now = new Date();
        const username = '<%= currentUser?.username %>';
        const html = `<li><b>${username}</b> <span class="muted">${now.toLocaleString()}</span><br />${body}</li>`;
        commentsList.insertAdjacentHTML('beforeend', html);
        commentTextarea.value = '';
        // Update comment count in meta
        const commentCountSpan = document.querySelector('.comment-count');
        if (commentCountSpan) {
          commentCountSpan.textContent = (parseInt(commentCountSpan.textContent, 10) + 1).toString();
        }
      }
    } finally {
      btn.disabled = false;
    }
  });
}
</script>
</html>